<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="teamproject.boardComment.service.impl.BoardCommentMapper">
<!-- id="메소드명",parameterType="매개변수자료형",resultType="return자료형"  -->


<resultMap id="commentWithReplies" type="BoardCommentVO">
    <id property="boardCommentId" column="boardCommentId"/>
    <result property="postId" column="post_id"/>
    <result property="boardCommentContent" column="boardCommentContent"/>
    <result property="boardCommentCreatedAt" column="boardCommentCreatedAt"/>
    <result property="boardCommentIsDeleted" column="boardCommentIsDeleted"/>
    <result property="userId" column="user_id"/>
    <result property="userName" column="user_name"/>
    <collection property="replyComment" ofType="teamproject.boardComment.service.BoardReplyCommentVO">
        <id property="replyCommentId" column="replyCommentId"/>
        <result property="replyboardCommentId" column="replyboardCommentId"/>
        <result property="replyContent" column="replyContent"/>
        <result property="replyCreatedAt" column="replyCreatedAt"/>
        <result property="replyUserId" column="replyUserId"/>
        <result property="replyUserName" column="replyUserName"/>
    </collection>
</resultMap>

<select id="selectBoardCommentListByPostId" parameterType="String" resultMap="commentWithReplies">         
   SELECT
    c."board_comment_id" AS boardCommentId,
    c."post_id",
    c."board_comment_content" AS boardCommentContent,
    c."board_comment_created_at" AS boardCommentCreatedAt,
    c."board_comment_is_deleted" AS boardCommentIsDeleted,
    c."user_id",
    u."user_name",

    r."board_reply_comment_id" AS replyCommentId,
    r."board_comment_id" AS replyboardCommentId,
    r."board_comment_content" AS replyContent,
    r."board_comment_created_at" AS replyCreatedAt,
    r."user_id" AS replyUserId,
    a."user_name" AS replyUserName
FROM "BoardComment" c
LEFT JOIN "BoardReplyComment" r ON c."board_comment_id" = r."board_comment_id"
LEFT JOIN "Users" u ON c."user_id" = u."user_id"
LEFT JOIN "Users" a ON r."user_id" = a."user_id"
WHERE c."post_id" =#{postId}
ORDER BY c."board_comment_created_at" DESC , r."board_comment_created_at" ASC
     
</select> 





<select id="selectBoardCommentList" parameterType="Criteria" resultType="BoardCommentVO">
      SELECT * FROM "BoardComment"
      WHERE "board_comment_id" LIKE '%' || #{searchKeyword} ||'%'
      OFFSET #{firstIndex} ROWS
      FETCH NEXT #{pageUnit} ROWS ONLY
</select> 
<select id="selectBoardCommentListTotCnt" parameterType="Criteria" resultType="int"> 
        		select count(*) from "BoardComment"
		WHERE "board_comment_id" LIKE '%'
		||
		#{searchKeyword} ||'%' 
</select>   
<select id="selectBoardComment" parameterType="String" resultType="BoardCommentVO">
		select * from "BoardComment"
		WHERE "board_comment_id" = #{boardCommentId}
</select>  

	<update id="update" parameterType="BoardCommentVO">
		UPDATE "BoardComment"
		SET
    		"board_comment_content" = #{boardCommentContent}
        WHERE "board_comment_id" = #{boardCommentId}
	</update>
	
	<delete id="delete" parameterType="String">
		DELETE FROM "BoardComment"
		WHERE "board_comment_id" = #{boardCommentId}

	</delete>	
<insert id="insert" parameterType="BoardCommentVO">
 <selectKey keyProperty="boardCommentId" resultType="String" order="BEFORE">
    SELECT 'C' || LPAD(SEQ_BOARDCOMMENT.NEXTVAL, 6, '0') FROM DUAL
  </selectKey>
  INSERT INTO "BoardComment" (
    "board_comment_id", "post_id", "board_comment_content", "user_id")
  VALUES (
    #{boardCommentId}, #{postId}, #{boardCommentContent}, #{userId})
</insert>
<insert id="insertReply" parameterType="BoardCommentVO">
 <selectKey keyProperty="userName" resultType="String" order="BEFORE">
    SELECT 'R' || LPAD(SEQ_BOARDREPLYCOMMENT.NEXTVAL, 6, '0') FROM DUAL
  </selectKey>
  INSERT INTO "BoardReplyComment" (
        "board_comment_id", "post_id", "board_comment_content", "user_id", "board_reply_comment_id")
    VALUES (
        #{boardCommentId, jdbcType=VARCHAR}, 
        #{postId, jdbcType=VARCHAR}, 
        #{boardCommentContent, jdbcType=VARCHAR}, 
        #{userId, jdbcType=VARCHAR}, 
        #{userName, jdbcType=VARCHAR})
</insert>

</mapper>