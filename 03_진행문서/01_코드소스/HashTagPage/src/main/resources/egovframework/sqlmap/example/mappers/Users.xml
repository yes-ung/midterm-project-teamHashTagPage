<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="teamproject.users.service.impl.UsersMapper">
	<!-- id="메소드명",parameterType="매개변수자료형",resultType="return자료형" -->
	<select id="authenticate" parameterType="UsersVO"
		resultType="UsersVO">
		SELECT * FROM "Users"
		WHERE "user_id"=#{userId}
		
	</select>

	<insert id="register" parameterType="UsersVO">
		INSERT INTO "Users"("user_id","user_email","user_pw"
		,"user_name","join_date","user_is_deleted","user_deleted_at","user_role"
		)
		VALUES(#{userId},#{userEmail},#{userPw},#{userName},SYSDATE,'N',SYSDATE,'U'
		)
	</insert>
	<!-- 아이디 찾기 -->
	<select id="findIdByNameAndEmail" resultType="String">
		SELECT "user_id"
		FROM "Users"
		WHERE "user_name" = #{userName} AND "user_email" = #{userEmail}
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="selectByIdAndEmail"
		resultType="teamproject.users.service.UsersVO">
		SELECT * FROM "Users"
		WHERE "user_id" = #{userId}
		AND "user_email" = #{userEmail}
	</select>

	<update id="updatePassword">
		UPDATE "Users"
		SET "user_pw" = #{userPw}
		WHERE "user_id" = #{userId}
	</update>
	<!-- 카카오 로그인 -->
	<select id="findByEmail"
		resultType="teamproject.users.service.UsersVO">
		SELECT * FROM "Users" WHERE "user_email" = #{userEmail}
		 AND "user_is_deleted" = 'N'
	</select>

	<insert id="insertUser"
		parameterType="teamproject.users.service.UsersVO">
		INSERT INTO "Users" (
		"user_id", "user_email", "user_pw", "user_name",
		"join_date", "user_is_deleted", "user_role", "login_type"
		) VALUES (
		#{userId}, #{userEmail}, #{userPw}, #{userName},
		#{joinDate}, #{userIsDeleted}, #{userRole}, #{loginType}
		)
	</insert>
	<select id="getUserById" parameterType="String" resultType="teamproject.users.service.UsersVO">
    SELECT * FROM "Users"
    WHERE "user_id" = #{userId}
</select>
<!-- 회원 탈퇴 처리 -->
<update id="deactivateUser" parameterType="String">
    UPDATE "Users"
    SET "user_is_deleted" = 'Y'
    WHERE "user_id" = #{userId}
</update>
<!-- 아이디 중복체크 -->
<select id="countUserId" parameterType="string" resultType="int">
    SELECT COUNT(*) FROM "Users"
    WHERE "user_id" = #{userId}
</select>
<!-- 닉네임 변경 -->
<update id="updateNickname" parameterType="teamproject.users.service.UsersVO">
    UPDATE "Users"
    SET "user_name" = #{userName}
    WHERE "user_id" = #{userId}
</update>
<!-- 핸드폰 등록 -->
<update id="updateUserPhone" parameterType="teamproject.users.service.UsersVO">
    UPDATE "Users"
    SET "user_phone" = #{userPhone}
    WHERE "user_id" = #{userId}
</update>



	
	
	
</mapper>