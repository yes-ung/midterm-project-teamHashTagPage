<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="teamproject.boardPost.service.impl.BoardPostMapper">
<!-- id="메소드명",parameterType="매개변수자료형",resultType="return자료형"  -->
<select id="selectBoardPostList" parameterType="Criteria" resultType="BoardPostVO">
SELECT 
    B."post_id",
    B."user_id",
    B."category_id",
    B."type_id",
    B."board_post_title",
    B."board_post_content",
    B."board_post_created_at",
    B."board_post_updated_at",
    B."board_post_is_deleted",
    B."board_post_views",
    U."user_name" AS userName,
    (
        (SELECT COUNT(*) FROM "BoardComment" c WHERE c."post_id" = B."post_id")
        +
        (SELECT COUNT(*) FROM "BoardReplyComment" d WHERE d."post_id" = B."post_id")
    ) AS commentCount,
    (SELECT COUNT(*) FROM "BoardLike" L WHERE L."post_id" = B."post_id") AS likeCount
FROM 
    "BoardPost" B
JOIN 
    "Users" U ON B."user_id" = U."user_id"
WHERE 
    <choose>
        <when test="searchType == 'title'">
            B."board_post_title" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <when test="searchType == 'content'">
            B."board_post_content" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <when test="searchType == 'nickname'">
            U."user_name" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <otherwise>
            B."board_post_title" LIKE '%' || #{searchKeyword} || '%'
        </otherwise>
    </choose>
    AND B."category_id" = #{searchCategory}
ORDER BY 
    B."board_post_created_at" DESC
OFFSET #{firstIndex} ROWS
FETCH NEXT #{pageUnit} ROWS ONLY


</select>
<select id="selectBoardPostListRecom" parameterType="Criteria" resultType="BoardPostVO">
SELECT 
    B."post_id",
    B."user_id",
    B."category_id",
    B."type_id",
    B."board_post_title",
    B."board_post_content",
    B."board_post_created_at",
    B."board_post_updated_at",
    B."board_post_is_deleted",
    B."board_post_views",
    U."user_name" AS userName,
    S."thumbnail_img_url" AS thumbnailImgUrl,
    (
        (SELECT COUNT(*) FROM "BoardComment" c WHERE c."post_id" = B."post_id")
        +
        (SELECT COUNT(*) FROM "BoardReplyComment" d WHERE d."post_id" = B."post_id")
    ) AS commentCount,
    (SELECT COUNT(*) FROM "BoardLike" L WHERE L."post_id" = B."post_id") AS likeCount
FROM 
    "BoardPost" B
JOIN 
    "Users" U ON B."user_id" = U."user_id"
JOIN 
    "Series" S ON B."series_id" = S."series_id"
WHERE 
    <choose>
        <when test="searchType == 'title'">
            B."board_post_title" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <when test="searchType == 'content'">
            B."board_post_content" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <when test="searchType == 'nickname'">
            U."user_name" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <otherwise>
            B."board_post_title" LIKE '%' || #{searchKeyword} || '%'
        </otherwise>
    </choose>
    AND B."category_id" = #{searchCategory}
ORDER BY 
    B."board_post_created_at" DESC
OFFSET #{firstIndex} ROWS
FETCH NEXT #{pageUnit} ROWS ONLY


</select>
<select id="selectBoardPostListRecomTotCnt" parameterType="Criteria" resultType="int"> 				
		SELECT count(*) FROM "BoardPost" B
JOIN 
    "Users" U ON B."user_id" = U."user_id"
JOIN 
    "Series" S ON B."series_id" = S."series_id"
WHERE 
    <choose>
        <when test="searchType == 'title'">
            B."board_post_title" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <when test="searchType == 'content'">
            B."board_post_content" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <when test="searchType == 'nickname'">
            U."user_name" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <otherwise>
            B."board_post_title" LIKE '%' || #{searchKeyword} || '%'
        </otherwise>
    </choose>
    AND B."category_id" = #{searchCategory}
</select>   
<select id="selectBoardPostListTotCnt" parameterType="Criteria" resultType="int"> 				
		SELECT count(*) FROM "BoardPost" B
JOIN 
    "Users" U ON B."user_id" = U."user_id"
WHERE 
    <choose>
        <when test="searchType == 'title'">
            B."board_post_title" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <when test="searchType == 'content'">
            B."board_post_content" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <when test="searchType == 'nickname'">
            U."user_name" LIKE '%' || #{searchKeyword} || '%'
        </when>
        <otherwise>
            B."board_post_title" LIKE '%' || #{searchKeyword} || '%'
        </otherwise>
    </choose>
    AND B."category_id" = #{searchCategory}
</select>   
<select id="selectBoardPost" parameterType="String" resultType="BoardPostVO">
		SELECT 
    B.*, 
    (SELECT U."user_name" FROM "Users" U WHERE U."user_id" = B."user_id") AS user_name,
    (SELECT COUNT(*) FROM "BoardComment" C WHERE C."post_id" = B."post_id") AS commentCount,
    (SELECT COUNT(*) FROM "BoardLike" L WHERE L."post_id" = B."post_id") AS likeCount
FROM 
    "BoardPost" B
		WHERE "post_id" = #{postId}
</select>  

	<update id="update" parameterType="BoardPostVO">
		UPDATE "BoardPost"
		SET
			"user_id" = #{userId},
    		"category_id" = #{categoryId},
    		"type_id" = #{typeId},
    		"board_post_views" = #{boardPostViews},
    		"board_post_title" = #{boardPostTitle},
    		"board_post_content" = #{boardPostContent},
    		"board_post_updated_at" = SYSDATE,
    		"board_post_is_deleted" = #{boardPostIsDeleted}
        WHERE "post_id" = #{postId}
	</update>
	
	<delete id="delete" parameterType="String">
		DELETE FROM "BoardPost"
		WHERE "post_id" = #{postId}

	</delete>
		
<insert id="insertFree" parameterType="BoardPostVO">
 <selectKey keyProperty="postId" resultType="String" order="BEFORE">
    SELECT 'P' || LPAD(SEQ_BOARDPOST.NEXTVAL, 6, '0') FROM DUAL
  </selectKey>
  
  INSERT INTO "BoardPost" (
    "post_id", "user_id", "category_id", "board_post_title", "board_post_content"
  )
  VALUES (
    #{postId}, #{userId}, #{categoryId},#{boardPostTitle},#{boardPostContent}
  )
  
</insert>

<insert id="insertRecom" parameterType="BoardPostVO">
 <selectKey keyProperty="postId" resultType="String" order="BEFORE">
    SELECT 'P' || LPAD(SEQ_BOARDPOST.NEXTVAL, 6, '0') FROM DUAL
  </selectKey>
  
  INSERT INTO "BoardPost" (
    "post_id", "user_id", "category_id", "board_post_title", "board_post_content","series_id"
  )
  VALUES (
    #{postId}, #{userId}, #{categoryId},#{boardPostTitle},#{boardPostContent},#{seriesId}
  )
  
</insert>

<update id="updateViews" parameterType="String" >
  
  UPDATE "BoardPost"
SET "board_post_views" = "board_post_views" + 1
WHERE "post_id" = #{postId}
  
</update>


</mapper>