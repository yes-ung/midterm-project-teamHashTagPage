<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="teamproject.series.service.impl.SeriesMapper">
   <!-- id="메소드명",parameterType="매개변수자료형",resultType="return자료형"  -->
   
  <select id="selectAllSeries"        
         resultType="teamproject.series.service.SeriesVO"
   >
      SELECT * FROM "Series"
     
   </select> 
   
   <select id="selectGenre10Series"
         parameterType="map"
         resultType="teamproject.series.service.SeriesVO"
   >
      SELECT * FROM "Series"
     <where>
    <if test="genreList != null and genreList.size() > 0">
      "type_id" IN 
      <foreach item="item" collection="genreList" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
  </where>
      OFFSET 0 ROWS
      FETCH NEXT 10 ROWS ONLY

   </select> 
   
   <select id="selectGenre10SeriesNovel"
         parameterType="map"
         resultType="teamproject.series.service.SeriesVO"
   >
     SELECT * FROM "Series"
<where>
  "category_id" = '웹소설'
  
  <if test="genreList != null and genreList.size() > 0">
    AND "type_id" IN 
    <foreach item="item" collection="genreList" open="(" separator="," close=")">
      #{item}
    </foreach>
  </if>
</where>
OFFSET 0 ROWS
FETCH NEXT 10 ROWS ONLY

   </select> 
   
   <select id="selectGenre10SeriesToon"
         parameterType="map"
         resultType="teamproject.series.service.SeriesVO"
   >
     SELECT * FROM "Series"
<where>
  "category_id" = '웹툰'
  
  <if test="genreList != null and genreList.size() > 0">
    AND "type_id" IN 
    <foreach item="item" collection="genreList" open="(" separator="," close=")">
      #{item}
    </foreach>
  </if>
</where>
OFFSET 0 ROWS
FETCH NEXT 10 ROWS ONLY

   </select> 
 
 <select id="selectGenre10SeriesNovelNew"
         parameterType="map"
         resultType="teamproject.series.service.SeriesVO"
   >
     SELECT * FROM "Series"
<where>
  "category_id" = '웹소설'
  
  <if test="genreList != null and genreList.size() > 0">
    AND "type_id" IN 
    <foreach item="item" collection="genreList" open="(" separator="," close=")">
      #{item}
    </foreach>
  </if>
</where>
ORDER BY "series_created_at" DESC
OFFSET 0 ROWS
FETCH NEXT 10 ROWS ONLY


   </select> 
 
 <select id="selectGenre10SeriesToonNew"
         parameterType="map"
         resultType="teamproject.series.service.SeriesVO"
   >
      SELECT * FROM "Series"
<where>
  "category_id" = '웹툰'
  
  <if test="genreList != null and genreList.size() > 0">
    AND "type_id" IN 
    <foreach item="item" collection="genreList" open="(" separator="," close=")">
      #{item}
    </foreach>
  </if>
</where>
ORDER BY "series_created_at" DESC
OFFSET 0 ROWS
FETCH NEXT 10 ROWS ONLY

   </select> 
 
 <select id="selectGenre10SeriesNovelRandom"
         parameterType="map"
         resultType="teamproject.series.service.SeriesVO"
   >
      SELECT * FROM "Series"
<where>
  "category_id" = '웹소설'
  
  <if test="genreList != null and genreList.size() > 0">
    AND "type_id" IN 
    <foreach item="item" collection="genreList" open="(" separator="," close=")">
      #{item}
    </foreach>
  </if>
</where>
ORDER BY DBMS_RANDOM.VALUE
FETCH FIRST 10 ROWS ONLY

   </select> 
   
   <select id="selectGenre10SeriesToonRandom"
         parameterType="map"
         resultType="teamproject.series.service.SeriesVO"
   >
      SELECT * FROM "Series"
<where>
  "category_id" = '웹툰'
  
  <if test="genreList != null and genreList.size() > 0">
    AND "type_id" IN 
    <foreach item="item" collection="genreList" open="(" separator="," close=")">
      #{item}
    </foreach>
  </if>
</where>
ORDER BY DBMS_RANDOM.VALUE
FETCH FIRST 10 ROWS ONLY

   </select> 
 
   
   <select id="selectPublisherIdBySeries"
         parameterType="String"
         resultType="String"
   >
      SELECT "publisher_id" FROM "Series"
 where "series_id" = #{seriesId}
   </select> 
   
   <select id="searchSeriesByPublisherId"
         parameterType="String"
         resultType="teamproject.series.service.SeriesVO"
   >
      SELECT * FROM "Series"
 where "publisher_id" = #{publisherId}
   </select> 
   
   <select id="searchSeriesByAuthorId"
         parameterType="String"
         resultType="teamproject.series.service.SeriesVO"
   >
       SELECT * FROM "Series"
 where "author_id" = #{authorId}
   </select> 
   
  <select id="searchSeriesByAll"
         parameterType="String"
         resultType="teamproject.series.service.SeriesVO"
   >
      SELECT * FROM "Series"
      WHERE "series_title" LIKE '%' || #{search} ||'%'
       OR "series_description" LIKE '%' || #{search} || '%'
       OR "publisher_id" LIKE '%' || #{search} || '%'
       OR "author_id" LIKE '%' || #{search} || '%'
       OR "category_id" LIKE '%' || #{search} || '%'
       OR "type_id" LIKE '%' || #{search} || '%'  
   </select>    
   
   
   
   
   
   






         
 <select id="selectSeriesList"
         parameterType="Criteria"
         resultType="teamproject.series.service.SeriesVO"
   >
      SELECT * FROM "Series"
      WHERE "series_title" LIKE '%' || #{searchKeyword} ||'%'
      OFFSET #{firstIndex} ROWS
      FETCH NEXT #{pageUnit} ROWS ONLY
   </select>   
     
   <select id="selectTrendList"
         parameterType="Criteria"
         resultType="teamproject.series.service.SeriesVO"
   >
SELECT *
FROM (
    SELECT *
    from "Series"
    ORDER BY TO_NUMBER("series_price") DESC
)
WHERE ROWNUM &lt;= 10
   </select>  
	<select id="selectTop10List"  parameterType="Criteria" resultType="teamproject.series.service.SeriesVO">
    SELECT * FROM "Series"
    WHERE "series_price" BETWEEN 1 AND 10
    ORDER BY "series_price" ASC
</select>
<select id="selectSeriesListTotCnt" parameterType="Criteria" resultType="int"> 
		select count(*) from "Series"
		WHERE "series_title" LIKE '%'
		||
		#{searchKeyword} ||'%' 
	</select>   
 	<insert id="insert" parameterType="teamproject.series.service.SeriesVO">
 INSERT INTO "Series" (
    "series_id", "category_id", "type_id", "series_order", "series_title",
    "series_price", "series_description", "series_created_at", "thumbnail_img_url",
    "publisher_id", "author_id", "thumbnail_img"
  )
  VALUES (
     #{seriesId}, #{categoryId}, #{typeId}, #{seriesOrder}, #{seriesTitle},
    #{seriesPrice}, #{seriesDescription}, SYSDATE, #{thumbnailImgUrl},
    #{publisherId}, #{authorId}, #{thumbnailImg}
  )
	</insert>
	<select id="selectSeries"
	parameterType="String"
	resultType="teamproject.series.service.SeriesVO">
		select * from "Series"
		WHERE "series_id" = #{seriesId}
	</select>  
	<update id="update" parameterType="teamproject.series.service.SeriesVO">
		update "Series"
		
		SET "category_id" = #{categoryId},
        "type_id" = #{typeId},
        "series_order" = #{seriesOrder},
        "series_title" = #{seriesTitle},
        "series_price" = #{seriesPrice},
        "series_description" = #{seriesDescription},
        "series_created_at" = SYSDATE,
        "thumbnail_img_url" = #{thumbnailImgUrl},
        "publisher_id" = #{publisherId},
        "author_id" = #{authorId},
        "thumbnail_img" = #{thumbnailImg}
        WHERE "series_id" = #{seriesId}
	</update>
	<delete id="delete" parameterType="teamproject.series.service.SeriesVO">
		delete "Series"
		WHERE "series_id"= #{seriesId}
	</delete>
   </mapper>